int length()
method returns the number of characters in a string, including spaces and special characters

String substring(int from, int to)
method returns a new string with the characters in the current string 
+starting with the character at the from index and ending at the character 
+before the to index (if the to index is specified, and if not specified it will contain the rest of the string).

int indexOf(String str)
method returns the index of the beginning of str in the current string or -1 if it isn’t found.

int compareTo(String other)
returns a negative value if the current string is less than the other string alphabetically
+0 if they have the same characters in the same order, and a positive value if the 
+current string is greater than the other string alphabetically.

boolean equals(String other)
returns true when the characters in the current string are the same
+as the ones in the other string. This method is inherited from the Object class
+but is overriden which means that the String class has its own version of that method



Strings in Java are objects of the String class that hold sequences of characters.

String objects can be created by using string literals (String s = “hi”;) 
+or by calling the String class constructor (String t = new String(“bye”);).

new is used to create a new object of a class.

null is used to indicate that an object reference doesn’t refer to any object yet.

String objects can be concatenated using the + or += operator, resulting in a new String object.

Primitive values can be concatenated with a String object. 
This causes implicit conversion of the values to String objects.

Escape sequences start with a backslash \ and have special meaning in Java. 
Escape sequences used in this course include ", \, and \n to print out a quote, backslash, and a new line






