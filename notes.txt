Method
Description

nextLine()
Scans all input up to the line break as a String

next()
Scans the next token of the input as a String

nextInt()
Scans the next token of the input as an int

nextDouble()
Scans the next token of the input as a double

nextBoolean()
Scans the next token of the input as a boolean

Postfix/Prefix increments

System.out.println(count++);
Print the current value of count, then add one to count
Postfix

System.out.println(++count);
Add one to count, then print the new value
Prefix

x = y++;
Copy the value of y into x, then add one to y
Postfix

x = ++y;
Add one to y, then copy the value of y into x
Prefix

x = y- -;
Copy the value of y into x, then subtract one from y
Postfix

x = - -y;
Subtract one from y, then copy the value of y into x
Prefix

Big O Notation
Big O is used to describe the performance and complexity of an algorithm
Describes the Worst Case Scenario for your code, or how this program will run under the "worst" conditions

Common Mistakes
forgetting that Java is case sensitive - myScore is not the same as myscore.
forgetting to specify the type when declaring a variable (using name = value; instead of type name = value;)
using a variable name, but never declaring the variable.
using the wrong name for the variable. For example calling it studentTotal when you declare it, but later calling it total.
using the wrong type for a variable. Donâ€™t forget that using integer types in calculations will give an integer result. So either cast one integer value to double or use a double variable if you want the fractional part (the part after the decimal point).
using == to compare double values. Remember that double values are often an approximation. You might want to test if the absolute value of the difference between the two values is less than some amount instead.
assuming that some value like 0 will be smaller than other int values. Remember that int values can be negative as well. If you want to set a value to the smallest possible int values use Integer.MIN_VALUE.

Concept Summary
Compiler - Software that translates the Java source code into the Java class file which can be run on the computer.
Compiler or syntax error - An error that is found during the compilation.
Main method - Where execution starts in a Java program.
Variable - A name associated with a memory location in the computer.
Declare a Variable - Specifying the type and name for a variable. This sets aside memory for a variable of that type and associates the name with that memory location.
Initializing a Variable - The first time you set the value of a variable.
data type - determines the size of memory reserved for a variable, for example int, double, boolean, String.
integer - a whole number like 2 or -3
boolean - An expression that is either true or false.
Camel case - One way to create a variable name by appending several words together and uppercasing the first letter of each word after the first word (myScore).
Casting a Variable - Changing the type of a variable using (type) name.
Operator - Common mathematical symbols such as + for addition and * for multiplication.
Compound assignment or shortcut operators - Operators like x++ which means x = x + 1 or x *=y which means x = x * y.
modulo - The % operator which returns the remainder from one number divide by another.
arithmetic expression - a sequence of operands and operators that describe a calculation to be performed, for example 3*(2 + x)
operator precedence - some operators are done before others, for example *, /, % have precedence over + and -, unless parentheses are used.


